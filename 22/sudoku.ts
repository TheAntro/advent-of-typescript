// Could not bring myself to finish this. Had a great December with these, thanks :)
import { Equal, Expect } from "type-testing";

/** because "dashing" implies speed */
type Dasher = "üí®";

/** representing dancing or grace */
type Dancer = "üíÉ";

/** a deer, prancing */
type Prancer = "ü¶å";

/** a star for the dazzling, slightly mischievous Vixen */
type Vixen = "üåü";

/** for the celestial body that shares its name */
type Comet = "‚òÑÔ∏è";

/** symbolizing love, as Cupid is the god of love */
type Cupid = "‚ù§Ô∏è";

/** representing thunder, as "Donner" means thunder in German */
type Donner = "üå©Ô∏è";

/** meaning lightning in German, hence the lightning bolt */
type Blitzen = "‚ö°";

/** for his famous red nose */
type Rudolph = "üî¥";

type Reindeer =
  | Dasher
  | Dancer
  | Prancer
  | Vixen
  | Comet
  | Cupid
  | Donner
  | Blitzen
  | Rudolph;

type Row = [
  [Reindeer, Reindeer, Reindeer],
  [Reindeer, Reindeer, Reindeer],
  [Reindeer, Reindeer, Reindeer]
];
type SudokuGame = [Row, Row, Row, Row, Row, Row, Row, Row, Row];

// Thanks jcalz for inspiration: https://stackoverflow.com/questions/72863199/how-to-check-if-tuple-includes-a-particular-type-inside-a-conditional-type
type IncludesReindeer<T extends Reindeer[], C extends Reindeer> = {
  [I in keyof T]: T[I] extends C ? unknown : never;
}[number] extends never
  ? false
  : true;

type GetNewSlot<
  Checked extends any[],
  CurSlot extends number
> = Checked["length"] extends 0
  ? 0
  : Checked["length"] extends 3
  ? 1
  : Checked["length"] extends 6
  ? 2
  : CurSlot;
type GetNewSlotCol<
  Checked extends any[],
  CurSlotCol extends any[]
> = Checked["length"] extends 0 | 3 | 6 ? [] : [0, ...CurSlotCol];

type ValidateRow<
  R extends Row,
  Checked extends Reindeer[] = [],
  Slot extends number = 0,
  SlotCol extends any[] = []
> = Checked["length"] extends 9
  ? true
  : R[Slot][SlotCol["length"]] extends infer Current extends Reindeer
  ? IncludesReindeer<Checked, Current> extends true
    ? false
    : [Current, ...Checked] extends infer NewChecked extends Reindeer[]
    ? ValidateRow<
        R,
        NewChecked,
        GetNewSlot<NewChecked, Slot>,
        GetNewSlotCol<NewChecked, SlotCol>
      >
    : never
  : never;

type ValidateRows<T extends Row[]> = T extends [
  infer R extends Row,
  ...infer Rest extends Row[]
]
  ? ValidateRow<R> extends false
    ? false
    : ValidateRows<Rest>
  : true;

type GetNewColValChecked<T extends Reindeer[], Current extends Reindeer> = [
  Current,
  ...T
] extends infer NewColValChecked extends Reindeer[]
  ? NewColValChecked["length"] extends 9
    ? []
    : NewColValChecked
  : never;

type GetNewCheckedCols<
  CurrentCols extends any[],
  NewColValChecked extends any[]
> = NewColValChecked["length"] extends 0 ? [0, ...CurrentCols] : CurrentCols;

type ValidateColumns<
  G extends SudokuGame,
  Checked extends Reindeer[] = [],
  CheckedCols extends any[] = [],
  Slot extends number = 0,
  Col extends any[] = []
> = CheckedCols["length"] extends 9
  ? true
  : G[Checked["length"]][Slot][Col["length"]] extends infer Current extends Reindeer
  ? IncludesReindeer<Checked, Current> extends true
    ? false
    : GetNewColValChecked<
        Checked,
        Current
      > extends infer NewChecked extends Reindeer[]
    ? GetNewCheckedCols<
        CheckedCols,
        NewChecked
      > extends infer NewCheckedCols extends any[]
      ? /* Add more type stuff here */ false
      : never
    : never
  : never;

type Validate<G extends SudokuGame> = ValidateRows<G> extends false
  ? false
  : true;

type checkIncludes = IncludesReindeer<["üíÉ", "ü¶å", "üí®"], Blitzen>;

type checkFalse = ValidateRow<
  [["üíÉ", "ü¶å", "üí®"], ["‚ù§Ô∏è", "üåü", "‚òÑÔ∏è"], ["‚ö°", "üî¥", "üåü"]]
>;
type checkTrue = ValidateRow<
  [["üí®", "üíÉ", "ü¶å"], ["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"], ["üåü", "‚ö°", "üî¥"]]
>;

type test_sudoku_1_actual = Validate<
  [
    //   ^?
    [["üí®", "üíÉ", "ü¶å"], ["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"], ["üåü", "‚ö°", "üî¥"]],
    [["üåü", "‚ö°", "üî¥"], ["üí®", "üíÉ", "ü¶å"], ["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"]],
    [["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"], ["üåü", "‚ö°", "üî¥"], ["üí®", "üíÉ", "ü¶å"]],
    [["ü¶å", "üí®", "üíÉ"], ["‚ö°", "‚òÑÔ∏è", "‚ù§Ô∏è"], ["üî¥", "üå©Ô∏è", "üåü"]],
    [["üå©Ô∏è", "üî¥", "üåü"], ["ü¶å", "üí®", "üíÉ"], ["‚ö°", "‚òÑÔ∏è", "‚ù§Ô∏è"]],
    [["‚ö°", "‚òÑÔ∏è", "‚ù§Ô∏è"], ["üå©Ô∏è", "üî¥", "üåü"], ["ü¶å", "üí®", "üíÉ"]],
    [["üíÉ", "ü¶å", "üí®"], ["‚ù§Ô∏è", "üåü", "‚òÑÔ∏è"], ["üå©Ô∏è", "üî¥", "‚ö°"]],
    [["üî¥", "üå©Ô∏è", "‚ö°"], ["üíÉ", "ü¶å", "üí®"], ["‚ù§Ô∏è", "üåü", "‚òÑÔ∏è"]],
    [["‚ù§Ô∏è", "üåü", "‚òÑÔ∏è"], ["üî¥", "üå©Ô∏è", "‚ö°"], ["üíÉ", "ü¶å", "üí®"]]
  ]
>;
type test_sudoku_1 = Expect<Equal<test_sudoku_1_actual, true>>;

type test_sudoku_2_actual = Validate<
  [
    //   ^?
    [["üå©Ô∏è", "üí®", "‚òÑÔ∏è"], ["üåü", "ü¶å", "‚ö°"], ["‚ù§Ô∏è", "üî¥", "üíÉ"]],
    [["üåü", "‚ö°", "‚ù§Ô∏è"], ["üî¥", "üíÉ", "‚òÑÔ∏è"], ["üå©Ô∏è", "üí®", "ü¶å"]],
    [["üî¥", "ü¶å", "üíÉ"], ["üí®", "‚ù§Ô∏è", "üå©Ô∏è"], ["üåü", "‚ö°", "‚òÑÔ∏è"]],
    [["‚ù§Ô∏è", "‚òÑÔ∏è", "üå©Ô∏è"], ["üíÉ", "‚ö°", "üî¥"], ["üí®", "ü¶å", "üåü"]],
    [["ü¶å", "üíÉ", "‚ö°"], ["üå©Ô∏è", "üåü", "üí®"], ["üî¥", "‚òÑÔ∏è", "‚ù§Ô∏è"]],
    [["üí®", "üåü", "üî¥"], ["ü¶å", "‚òÑÔ∏è", "‚ù§Ô∏è"], ["‚ö°", "üíÉ", "üå©Ô∏è"]],
    [["‚òÑÔ∏è", "üî¥", "üí®"], ["‚ù§Ô∏è", "üå©Ô∏è", "ü¶å"], ["üíÉ", "üåü", "‚ö°"]],
    [["üíÉ", "‚ù§Ô∏è", "ü¶å"], ["‚ö°", "üî¥", "üåü"], ["‚òÑÔ∏è", "üå©Ô∏è", "üí®"]],
    [["‚ö°", "üå©Ô∏è", "üåü"], ["‚òÑÔ∏è", "üí®", "üíÉ"], ["ü¶å", "‚ù§Ô∏è", "üî¥"]]
  ]
>;
type test_sudoku_2 = Expect<Equal<test_sudoku_2_actual, true>>;

type test_sudoku_3_actual = Validate<
  [
    //   ^?
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]],
    [["üåü", "‚ö°", "üí®"], ["‚ù§Ô∏è", "üíÉ", "üî¥"], ["‚òÑÔ∏è", "üå©Ô∏è", "ü¶å"]],
    [["‚òÑÔ∏è", "üå©Ô∏è", "‚ù§Ô∏è"], ["‚ö°", "üåü", "ü¶å"], ["üíÉ", "üî¥", "üí®"]],
    [["üå©Ô∏è", "üíÉ", "üî¥"], ["ü¶å", "üí®", "‚ö°"], ["üåü", "‚òÑÔ∏è", "‚ù§Ô∏è"]],
    [["‚ù§Ô∏è", "‚òÑÔ∏è", "‚ö°"], ["üíÉ", "üå©Ô∏è", "üåü"], ["ü¶å", "üí®", "üî¥"]],
    [["üí®", "üåü", "ü¶å"], ["‚òÑÔ∏è", "üî¥", "‚ù§Ô∏è"], ["üå©Ô∏è", "üíÉ", "‚ö°"]],
    [["üíÉ", "üí®", "üåü"], ["üî¥", "ü¶å", "‚òÑÔ∏è"], ["‚ù§Ô∏è", "‚ö°", "üå©Ô∏è"]],
    [["üî¥", "‚ù§Ô∏è", "‚òÑÔ∏è"], ["üåü", "‚ö°", "üå©Ô∏è"], ["üí®", "ü¶å", "üíÉ"]],
    [["‚ö°", "ü¶å", "üå©Ô∏è"], ["üí®", "‚ù§Ô∏è", "üíÉ"], ["üî¥", "üåü", "‚òÑÔ∏è"]]
  ]
>;
type test_sudoku_3 = Expect<Equal<test_sudoku_3_actual, true>>;

type test_sudoku_4_actual = Validate<
  [
    //   ^?
    [["üí®", "üíÉ", "ü¶å"], ["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"], ["üåü", "‚ö°", "üî¥"]],
    [["üåü", "‚ö°", "üî¥"], ["üí®", "üíÉ", "ü¶å"], ["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"]],
    [["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"], ["üåü", "‚ö°", "üî¥"], ["üí®", "üíÉ", "ü¶å"]],
    [["ü¶å", "üí®", "üíÉ"], ["‚ö°", "‚òÑÔ∏è", "‚ù§Ô∏è"], ["üî¥", "üå©Ô∏è", "üåü"]],
    [["üå©Ô∏è", "üî¥", "üåü"], ["ü¶å", "üí®", "üíÉ"], ["‚ö°", "‚òÑÔ∏è", "‚ù§Ô∏è"]],
    [["‚ö°", "‚òÑÔ∏è", "‚ù§Ô∏è"], ["üå©Ô∏è", "üî¥", "üåü"], ["ü¶å", "üí®", "üíÉ"]],
    [["üíÉ", "ü¶å", "üí®"], ["‚ù§Ô∏è", "üåü", "‚òÑÔ∏è"], ["‚ö°", "üî¥", "üåü"]],
    [["üî¥", "üå©Ô∏è", "‚ö°"], ["üíÉ", "ü¶å", "üí®"], ["‚ù§Ô∏è", "üåü", "‚òÑÔ∏è"]],
    [["‚ù§Ô∏è", "üåü", "‚òÑÔ∏è"], ["üî¥", "üå©Ô∏è", "‚ö°"], ["üíÉ", "ü¶å", "üí®"]]
  ]
>;
type test_sudoku_4 = Expect<Equal<test_sudoku_4_actual, false>>;

type test_sudoku_5_actual = Validate<
  [
    //   ^?
    [["üå©Ô∏è", "üí®", "‚òÑÔ∏è"], ["üåü", "ü¶å", "‚ö°"], ["‚ù§Ô∏è", "üî¥", "üíÉ"]],
    [["üåü", "‚ö°", "‚ù§Ô∏è"], ["üî¥", "üíÉ", "‚òÑÔ∏è"], ["üå©Ô∏è", "üí®", "ü¶å"]],
    [["üî¥", "ü¶å", "üíÉ"], ["üí®", "‚ù§Ô∏è", "üå©Ô∏è"], ["üåü", "‚ö°", "‚òÑÔ∏è"]],
    [["‚ù§Ô∏è", "‚òÑÔ∏è", "üå©Ô∏è"], ["üíÉ", "‚ö°", "üî¥"], ["üí®", "ü¶å", "üåü"]],
    [["ü¶å", "üíÉ", "‚ö°"], ["üå©Ô∏è", "üåü", "üí®"], ["üî¥", "‚òÑÔ∏è", "‚ù§Ô∏è"]],
    [["üí®", "üåü", "üî¥"], ["ü¶å", "‚òÑÔ∏è", "‚ù§Ô∏è"], ["‚ö°", "üíÉ", "üå©Ô∏è"]],
    [["‚òÑÔ∏è", "üî¥", "üí®"], ["‚ù§Ô∏è", "üíÉ", "ü¶å"], ["üíÉ", "üåü", "‚ö°"]],
    [["üíÉ", "‚ù§Ô∏è", "ü¶å"], ["‚ö°", "üî¥", "üåü"], ["‚òÑÔ∏è", "üå©Ô∏è", "üí®"]],
    [["‚ö°", "üå©Ô∏è", "üåü"], ["‚òÑÔ∏è", "üí®", "üíÉ"], ["ü¶å", "‚ù§Ô∏è", "üî¥"]]
  ]
>;
type test_sudoku_5 = Expect<Equal<test_sudoku_5_actual, false>>;

type test_sudoku_6_actual = Validate<
  [
    //   ^?
    [["‚ö°", "üî¥", "üå©Ô∏è"], ["ü¶å", "‚ù§Ô∏è", "üí®"], ["üí®", "üåü", "‚òÑÔ∏è"]],
    [["‚ù§Ô∏è", "ü¶å", "üåü"], ["üí®", "üåü", "üî¥"], ["üíÉ", "‚ö°", "üå©Ô∏è"]],
    [["üí®", "üíÉ", "üåü"], ["‚òÑÔ∏è", "‚ö°", "üå©Ô∏è"], ["üî¥", "‚ù§Ô∏è", "ü¶å"]],
    [["ü¶å", "‚ö°", "üî¥"], ["‚ù§Ô∏è", "üíÉ", "üí®"], ["‚òÑÔ∏è", "üå©Ô∏è", "üåü"]],
    [["üåü", "üå©Ô∏è", "üíÉ"], ["‚ö°", "üî¥", "‚òÑÔ∏è"], ["‚ù§Ô∏è", "ü¶å", "üí®"]],
    [["‚òÑÔ∏è", "üí®", "‚ù§Ô∏è"], ["üåü", "üå©Ô∏è", "ü¶å"], ["‚ö°", "üíÉ", "üî¥"]],
    [["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["üíÉ", "ü¶å", "‚ö°"], ["üåü", "üî¥", "‚ù§Ô∏è"]],
    [["üî¥", "‚ù§Ô∏è", "‚ö°"], ["üå©Ô∏è", "‚òÑÔ∏è", "üåü"], ["ü¶å", "üí®", "üíÉ"]],
    [["üíÉ", "üåü", "ü¶å"], ["üî¥", "üí®", "‚ù§Ô∏è"], ["üå©Ô∏è", "‚òÑÔ∏è", "‚ö°"]]
  ]
>;
type test_sudoku_6 = Expect<Equal<test_sudoku_6_actual, false>>;

type test_sudoku_7_actual = Validate<
  [
    [["üí®", "üíÉ", "ü¶å"], ["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"], ["üåü", "‚ö°", "üî¥"]],
    [["üíÉ", "ü¶å", "‚òÑÔ∏è"], ["‚ù§Ô∏è", "üå©Ô∏è", "üåü"], ["‚ö°", "üî¥", "üí®"]],
    [["ü¶å", "‚òÑÔ∏è", "‚ù§Ô∏è"], ["üå©Ô∏è", "üåü", "‚ö°"], ["üî¥", "üí®", "üíÉ"]],
    [["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"], ["üåü", "‚ö°", "üî¥"], ["üí®", "üíÉ", "ü¶å"]],
    [["‚ù§Ô∏è", "üå©Ô∏è", "üåü"], ["‚ö°", "üî¥", "üí®"], ["üíÉ", "ü¶å", "‚òÑÔ∏è"]],
    [["üå©Ô∏è", "üåü", "‚ö°"], ["üî¥", "üí®", "üíÉ"], ["ü¶å", "‚òÑÔ∏è", "‚ù§Ô∏è"]],
    [["üåü", "‚ö°", "üî¥"], ["üí®", "üíÉ", "ü¶å"], ["‚òÑÔ∏è", "‚ù§Ô∏è", "üå©Ô∏è"]],
    [["‚ö°", "üî¥", "üí®"], ["üíÉ", "ü¶å", "‚òÑÔ∏è"], ["‚ù§Ô∏è", "üå©Ô∏è", "üåü"]],
    [["üî¥", "üí®", "üíÉ"], ["ü¶å", "‚òÑÔ∏è", "‚ù§Ô∏è"], ["üå©Ô∏è", "üåü", "‚ö°"]]
  ]
>;

type test_sudoku_7 = Expect<Equal<test_sudoku_7_actual, false>>;

type test_sudoku_8_actual = Validate<
  [
    //   ^?
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]],
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]],
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]],
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]],
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]],
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]],
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]],
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]],
    [["ü¶å", "üî¥", "üíÉ"], ["üå©Ô∏è", "‚òÑÔ∏è", "üí®"], ["‚ö°", "‚ù§Ô∏è", "üåü"]]
  ]
>;

type test_sudoku_8 = Expect<Equal<test_sudoku_8_actual, false>>;
